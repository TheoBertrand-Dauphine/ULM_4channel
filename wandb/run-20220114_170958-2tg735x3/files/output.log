Validation sanity check:   0%|                                                                                                                                                       | 0/2 [00:00<?, ?it/s]torch.Size([4, 40, 3])
tensor([[  0,   0,   1,  99],
        [  0,   0,   1, 127],
        [  0,   0,   2,  62],
        ...,
        [  3,   0, 247, 227],
        [  3,   0, 249, 123],
        [  3,   0, 252,   1]])
Validation sanity check:  50%|███████████████████████████████████████████████████████████████████████▌                                                                       | 1/2 [00:00<00:00,  1.76it/s]torch.Size([4, 40, 3])
tensor([[  0,   0,   1,   1],
        [  0,   0,   1,  51],
        [  0,   0,   1, 253],
        ...,
        [  3,   0, 251, 195],
        [  3,   0, 252,  68],
        [  3,   0, 252,  93]])
Epoch 0:   0%|                                                                                                                                                                      | 0/15 [00:00<?, ?it/s]
GPU available: True, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py:1584: UserWarning: GPU available but not used. Set the gpus flag in your trainer `Trainer(gpus=1)` or script `--gpus=1`.
  rank_zero_warn(
   | Name       | Type            | Params
------------------------------------------------
0  | encoder1   | Sequential      | 2.5 K
1  | pool1      | MaxPool2d       | 0
2  | encoder2   | Sequential      | 14.0 K
3  | pool2      | MaxPool2d       | 0
4  | encoder3   | Sequential      | 55.6 K
5  | pool3      | MaxPool2d       | 0
6  | encoder4   | Sequential      | 221 K
7  | pool4      | MaxPool2d       | 0
8  | bottleneck | Sequential      | 885 K
9  | upconv4    | ConvTranspose2d | 131 K
10 | decoder4   | Sequential      | 442 K
11 | upconv3    | ConvTranspose2d | 32.8 K
12 | decoder3   | Sequential      | 110 K
13 | upconv2    | ConvTranspose2d | 8.2 K
14 | decoder2   | Sequential      | 27.8 K
15 | upconv1    | ConvTranspose2d | 2.1 K
16 | decoder1   | Sequential      | 7.0 K
17 | conv       | Conv2d          | 51
------------------------------------------------
1.9 M     Trainable params
0         Non-trainable params
1.9 M     Total params
7.769     Total estimated model params size (MB)
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:631: UserWarning: Checkpoint directory /home/tbertrand/Bureau/ULM_4channel_pull/None/version_None/checkpoints exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:428: UserWarning: The number of training samples (10) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.

Epoch 0:  67%|████████████████████████████████████████████████████████████████████████████████████████████████▋                                                | 10/15 [00:03<00:01,  2.62it/s, loss=0.167]
Validating:   0%|                                                                                                                                                                    | 0/5 [00:00<?, ?it/s]
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/loggers/wandb.py:341: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
tensor([[  0,   0,   1, 141],                                                                                                                                                        | 0/5 [00:00<?, ?it/s]
        [  0,   0,   1, 186],
        [  0,   0,   1, 245],
        ...,
        [  3,   0, 253, 162],
        [  3,   0, 255,   0],
        [  3,   0, 255, 139]])
Epoch 0:  80%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                             | 12/15 [00:04<00:01,  2.76it/s, loss=0.167]torch.Size([4, 40, 3])
tensor([[  0,   0,   1,   1],███████████████████▏                                                                                                                            | 1/5 [00:00<00:02,  1.86it/s]
        [  0,   0,   1,  18],
        [  0,   0,   1,  51],
        ...,
        [  3,   0, 255, 192],
        [  3,   0, 255, 228],
        [  3,   0, 255, 254]])
                                                                                                                                                                                                           torch.Size([4, 40, 3])
tensor([[  0,   0,   3,   6],██████████████████████████████████████████████████▍                                                                                             | 2/5 [00:00<00:00,  3.09it/s]
        [  0,   0,   3,  42],
        [  0,   0,   5,  54],
        ...,
        [  3,   0, 255,  25],
        [  3,   2, 133, 199],
        [  3,   2, 174, 253]])
Epoch 0:  93%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎         | 14/15 [00:04<00:00,  3.00it/s, loss=0.167]torch.Size([4, 40, 3])
tensor([[  0,   0,   1,   1],█████████████████████████████████████████████████████████████████████████████████▌                                                              | 3/5 [00:00<00:00,  4.18it/s]
        [  0,   0,   1,  18],
        [  0,   0,   1,  50],
        ...,
        [  3,   2,  88, 217],
        [  3,   2, 208,   2],
        [  3,   2, 210, 253]])
                                                                                                                                                                                                           torch.Size([4, 40, 3])
tensor([[  0,   0,   1,  89],████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                               | 4/5 [00:00<00:00,  5.08it/s]
        [  0,   0,   1, 236],
        [  0,   0,   3,   0],
        ...,
        [  3,   0, 255, 212],
        [  3,   0, 255, 228],
        [  3,   0, 255, 254]])
Epoch 0: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15/15 [00:05<00:00,  2.88it/s, loss=0.167, v_num=35x3]