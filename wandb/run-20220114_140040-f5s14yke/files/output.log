GPU available: True, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py:1584: UserWarning: GPU available but not used. Set the gpus flag in your trainer `Trainer(gpus=1)` or script `--gpus=1`.
  rank_zero_warn(
   | Name       | Type            | Params
------------------------------------------------
0  | encoder1   | Sequential      | 2.5 K
1  | pool1      | MaxPool2d       | 0
2  | encoder2   | Sequential      | 14.0 K
3  | pool2      | MaxPool2d       | 0
4  | encoder3   | Sequential      | 55.6 K
5  | pool3      | MaxPool2d       | 0
6  | encoder4   | Sequential      | 221 K
7  | pool4      | MaxPool2d       | 0
8  | bottleneck | Sequential      | 885 K
9  | upconv4    | ConvTranspose2d | 131 K
10 | decoder4   | Sequential      | 442 K
11 | upconv3    | ConvTranspose2d | 32.8 K
12 | decoder3   | Sequential      | 110 K
13 | upconv2    | ConvTranspose2d | 8.2 K
14 | decoder2   | Sequential      | 27.8 K
15 | upconv1    | ConvTranspose2d | 2.1 K
16 | decoder1   | Sequential      | 7.0 K
17 | conv       | Conv2d          | 51
------------------------------------------------
1.9 M     Trainable params
0         Non-trainable params
1.9 M     Total params
7.769     Total estimated model params size (MB)
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:631: UserWarning: Checkpoint directory /home/tbertrand/Bureau/ULM_4channel_pull/None/version_None/checkpoints exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:132: UserWarning: The dataloader, val_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 16 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/torch/nn/modules/loss.py:520: UserWarning: Using a target size (torch.Size([1, 1, 3, 256, 256])) that is different to the input size (torch.Size([1, 3, 256, 256])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
/home/tbertrand/Bureau/ULM_4channel-master/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:132: UserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 16 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
(2, 3)
Validation sanity check:   0%|                                                                                                                                                       | 0/2 [00:00<?, ?it/s](2, 3)
(6, 3)
torch.Size([1, 1, 3, 256, 256])
Validation sanity check:  50%|███████████████████████████████████████████████████████████████████████▌                                                                       | 1/2 [00:00<00:00,  5.38it/s](2, 3)
torch.Size([1, 1, 3, 256, 256])
Epoch 0:   0%|                                                                                                                                                                      | 0/80 [00:00<?, ?it/s](1, 3)
(6, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   1%|█▊                                                                                                                                                | 1/80 [00:00<00:16,  4.74it/s, loss=0.223](5, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   2%|███▋                                                                                                                                              | 2/80 [00:00<00:14,  5.54it/s, loss=0.216](9, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   4%|█████▍                                                                                                                                            | 3/80 [00:00<00:13,  5.89it/s, loss=0.212](6, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   5%|███████▎                                                                                                                                          | 4/80 [00:00<00:12,  6.07it/s, loss=0.207](5, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   6%|█████████▏                                                                                                                                        | 5/80 [00:00<00:11,  6.59it/s, loss=0.205](12, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   8%|██████████▉                                                                                                                                       | 6/80 [00:00<00:10,  6.91it/s, loss=0.204](3, 3)
torch.Size([1, 1, 256, 256]) torch.Size([1, 3, 256, 256])
Epoch 0:   9%|████████████▊                                                                                                                                     | 7/80 [00:00<00:10,  7.15it/s, loss=0.201](8, 3)
